(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{393:function(e,s,t){"use strict";t.r(s);var _=t(42),v=Object(_.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"git-pull"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-pull"}},[e._v("#")]),e._v(" git pull")]),e._v(" "),t("p",[e._v("在"),t("a",{attrs:{href:"/git/remotes/fetch"}},[e._v("fetch")]),e._v("中, 讲了GIT是如何将远端文件历史同步到本地, 但大部分情况下我们除了同步远端文件历史外, 还希望其和当前分支合并")]),e._v(" "),t("p",[t("code",[e._v("git pull")]),e._v("是一个这样的命令, 是"),t("code",[e._v("git fetch")]),e._v(" + "),t("code",[e._v("git merge")]),e._v("的复合命令")]),e._v(" "),t("hr"),e._v(" "),t("h2",{attrs:{id:"pull的参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pull的参数"}},[e._v("#")]),e._v(" pull的参数")]),e._v(" "),t("p",[t("code",[e._v("git pull [<repo> [refspec | branch_name]] [options]")])]),e._v(" "),t("p",[e._v("参数中 "),t("code",[e._v("<repo>")]),e._v(", "),t("code",[e._v("<refspec>")]),e._v(", "),t("code",[e._v("<branch_name>")]),e._v("作用于"),t("code",[e._v("git fetch")])]),e._v(" "),t("p",[t("code",[e._v("<options>")]),e._v("则是"),t("code",[e._v("git merge")]),e._v("和"),t("code",[e._v("git fetch")]),e._v("的optins的并集")]),e._v(" "),t("h2",{attrs:{id:"pull合并的2种策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pull合并的2种策略"}},[e._v("#")]),e._v(" pull合并的2种策略")]),e._v(" "),t("p",[e._v("git pull 基于提供的参数的不同有2种合并策略")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("merge FETCH_HEAD")])])]),e._v(" "),t("p",[e._v("指定了"),t("code",[e._v("refspec")]),e._v("或"),t("code",[e._v("branch_name")]),e._v(", git 在将各种"),t("code",[e._v("SHA-1")]),e._v("文件下载下来后, 会讲"),t("code",[e._v("FETCH_HEAD")]),e._v("内记录的"),t("code",[e._v("commiet-SHA-1")]),e._v("合并进当前分支")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("提示")]),e._v(" "),t("p",[t("code",[e._v("FETCH_HEAD")]),e._v("会记录当前fetch分支的末端commit-SHA-1")])]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" pull origin dev\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 当前分支是master, 下载dev的代码, 然后合并进本地master分支")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 等价于")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" fetch origin dev\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" merge FETCH_HEAD\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("因为采用这种参数只会下载远端一个分支的"),t("code",[e._v("SHA-1")]),e._v("文件, 即"),t("code",[e._v("FETCH_HEAD")]),e._v("内只有一条记录, 所以能直接将其合并")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("注意")]),e._v(" "),t("p",[e._v("有的时候"),t("code",[e._v("FETCH_HEAD")]),e._v("内不会只有一条记录, 这个时候"),t("code",[e._v("git merge FETCH_HEAD")]),e._v("会尝试将所有的记录都合并进当前的分支内")]),e._v(" "),t("p",[t("code",[e._v("git fetch origin dev_1")])]),e._v(" "),t("p",[e._v("FETCH_HEAD内记录了一条dev_1索引的"),t("code",[e._v("SHA-1")])]),e._v(" "),t("p",[t("code",[e._v("git pull origin dev_2 --append")])]),e._v(" "),t("p",[e._v("FETCH_HEAD内追加了一条dev_2索引的"),t("code",[e._v("SHA-1")])]),e._v(" "),t("p",[e._v("merge FETCH_HEAD就是将当前分支, dev_1, dev_2三者进行合并")]),e._v(" "),t("p",[t("code",[e._v("--append")]),e._v("指定FETCH_HEAD写入方式变为追加")])]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("merge upstream branch")])])]),e._v(" "),t("p",[e._v("如果不指定"),t("code",[e._v("refspec")]),e._v("或"),t("code",[e._v("branch_name")]),e._v(", git 在将各种"),t("code",[e._v("SHA-1")]),e._v("文件下载下来后, 会尝试将当前分支所对应的"),t("code",[e._v("upstream branch")]),e._v("合并进当前分支")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" pull \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 等价于下面")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" fetch  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 下载object/refs/*")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" merge refs/remotes/origin/"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("current_upstream_branch"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("这是因为在默认的情况下("),t("code",[e._v("+refs/heads/*:refs/remotes/heads/*")]),e._v(") "),t("code",[e._v("FETCH_HEAD(.git/FETCH_HEAD)")]),e._v("内有远端全部分支末端"),t("code",[e._v("commit-SHA-1")]),e._v(", 不可能都将他们合并进当前分支, 所以GIT采用了"),t("code",[e._v("merge upstream branch")]),e._v("的策略")]),e._v(" "),t("h2",{attrs:{id:"rebase"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rebase"}},[e._v("#")]),e._v(" --rebase")]),e._v(" "),t("p",[e._v("我们知道git有2种合并分支的策略")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("merge")])])]),e._v(" "),t("p",[e._v("完整的提交历史")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("rebase")])])]),e._v(" "),t("p",[e._v("流水线式的提交历史")]),e._v(" "),t("p",[e._v("区别就在于"),t("code",[e._v("rebase")]),e._v("对提交历史做了更改, 增加其可读性")]),e._v(" "),t("p",[t("code",[e._v("git pull")]),e._v("默认使用"),t("code",[e._v("merge")]),e._v("合并代码, 但是可以通过"),t("code",[e._v("--rebase")]),e._v("让其采用"),t("code",[e._v("git rebase")])])])}),[],!1,null,null,null);s.default=v.exports}}]);