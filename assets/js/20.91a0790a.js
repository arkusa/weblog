(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{401:function(e,s,t){"use strict";t.r(s);var v=t(42),_=Object(v.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"git-fetch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-fetch"}},[e._v("#")]),e._v(" git fetch")]),e._v(" "),t("h2",{attrs:{id:"同步远端文件到本地"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#同步远端文件到本地"}},[e._v("#")]),e._v(" 同步远端文件到本地")]),e._v(" "),t("p",[e._v("我们知道GIT是一个基于快照的版本控制系统, GIT同步远端的过程其实就是下载远端所有文件快照(所有的"),t("code",[e._v("SHA-1")]),e._v(", 除了blob-SHA-1外, 还包括tree-SHA-1和commit-SHA-1)的过程, 即: "),t("code",[e._v(".git/refs/objects/")]),e._v("下的文件")]),e._v(" "),t("p",[e._v("同时由于GIT"),t("code",[e._v("分支")]),e._v("的概念, 我们并不一定总是下载所有的SHA-1, 有时我们可能只需要某个分支上所有SHA-1")]),e._v(" "),t("p",[e._v("甚至于, 如果你的网络较差, 可以只下载某个分支下的几个SHA-1")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("注意")]),e._v(" "),t("p",[e._v("在fetch"),t("code",[e._v("SHA-1")]),e._v("的时候需要提供一个"),t("code",[e._v("commit-SHA-1")]),e._v(", 相当于树的头节点, 通过这个节点GIT就可以得到基于其的所有文件内容")])]),e._v(" "),t("div",{staticClass:"language-html line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[e._v("              mast\n               |\n1 -> 2 -> 3 -> 4\n     | -> 5 -> 6\n               |\n              dev\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("p",[e._v("上面是一个简略的commit-SHA-1的历史, 2是分支节点")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("我们可以将其全部同步到本地")])]),e._v(" "),t("li",[t("p",[e._v("也可以同步某个分支(dev)到本地")]),e._v(" "),t("p",[e._v("1 -> 2 -> 5 -> 6")])]),e._v(" "),t("li",[t("p",[e._v("也可以同步5到本地")]),e._v(" "),t("p",[e._v("1 -> 2 -> 5")])]),e._v(" "),t("li",[t("p",[e._v("甚至于只同步6到本地")]),e._v(" "),t("p",[e._v("6")])])]),e._v(" "),t("p",[e._v("这样我们就能得到想到的文件历史")]),e._v(" "),t("h2",{attrs:{id:"管理远端文件的同步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#管理远端文件的同步"}},[e._v("#")]),e._v(" 管理远端文件的同步")]),e._v(" "),t("h3",{attrs:{id:"fetch-head"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fetch-head"}},[e._v("#")]),e._v(" FETCH_HEAD")]),e._v(" "),t("p",[e._v("这个文件记录了fetch的末端commit-SHA-1, 默认每次fetch 都会对其进行overwrite")]),e._v(" "),t("p",[e._v("同时"),t("code",[e._v("FETCH_HEAD")]),e._v("在GIT系统中也是作为关键字存在的")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" merge FETCH_HEAD\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 将fetch的内容merge到当前分支上")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("h3",{attrs:{id:"refspec"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#refspec"}},[e._v("#")]),e._v(" refspec")]),e._v(" "),t("p",[t("code",[e._v("refspec")]),e._v("是GIT定义的一种引用规范"),t("code",[e._v("+<src>:<dict>")]),e._v(", git push 也使用到了这个引用")]),e._v(" "),t("p",[e._v("其中:")]),e._v(" "),t("p",[t("code",[e._v("+")]),e._v("表示强制更新")]),e._v(" "),t("p",[t("code",[e._v("<src>")]),e._v("表示路径, 即: 发送SHA-1的GIT仓库下的路径")]),e._v(" "),t("p",[t("code",[e._v("<dict>")]),e._v("表示磁盘位置, 即: 存储SHA-1的GIT仓库下的磁盘位置")]),e._v(" "),t("p",[e._v("如果指定了"),t("code",[e._v("refspec")]),e._v("的话除了将末端SHA-1记录到"),t("code",[e._v("FETCH_HEAD")]),e._v("上, 还会根据"),t("code",[e._v("<dict>")]),e._v("创建文件并记录SHA-1")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("提示")]),e._v(" "),t("p",[t("code",[e._v("<dict>")]),e._v("和"),t("code",[e._v("<src>")]),e._v("有缩略表示, 如何缩略请看"),t("a",{attrs:{href:"/git/refspec"}},[e._v("refspec")])]),e._v(" "),t("p",[t("code",[e._v("git fetch origin master:dev")]),e._v(", 会被GIT解析为"),t("code",[e._v("git fetch origin refs/heads/master:refs/heads/dev")])]),e._v(" "),t("p",[e._v("意思是将远端refs/heads/master(master分支)索引到的SHA-1下载, 并且将末端SHA-1记录到本地refs/heads/dev(如果不存在相当于基于origin/master分支创建了本地dev分支)")])]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("注意")]),e._v(" "),t("p",[e._v("fetch 和 push 所指的"),t("code",[e._v("<dict>")]),e._v("和"),t("code",[e._v("<src>")]),e._v(" 是相反的")]),e._v(" "),t("p",[e._v("fetch "),t("code",[e._v("<src>")]),e._v(" -> 远端 "),t("code",[e._v("<dict>")]),e._v(" -> 本地")]),e._v(" "),t("p",[e._v("push "),t("code",[e._v("<src>")]),e._v(" -> 本地 "),t("code",[e._v("<dict>")]),e._v(" -> 远端")]),e._v(" "),t("hr"),e._v(" "),t("p",[e._v("同时如果"),t("code",[e._v("<src>")]),e._v("和"),t("code",[e._v("<dict>")]),e._v("一致的话 push可以合写, fetch不可以")]),e._v(" "),t("p",[t("code",[e._v("git push origin master")]),e._v(" 相当于 "),t("code",[e._v("git push origin master:master")])]),e._v(" "),t("p",[t("code",[e._v("git fetch origin master")]),e._v(" 只是表示下载远端master分支, 并存储到FETCH_HEAD上. 至于是否存储到其他文件, 比如远端分支的镜像上, 则要依据"),t("code",[e._v("config.remote.fetch")]),e._v("的配置")]),e._v(" "),t("hr")]),e._v(" "),t("h3",{attrs:{id:"config-remote-fetch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#config-remote-fetch"}},[e._v("#")]),e._v(" config.remote.fetch")]),e._v(" "),t("p",[e._v("执行")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" origin url\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v(".git/config会被写入如下配置")]),e._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[e._v("[remote "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"origin"')]),e._v("]\n  url = url\n  fetch = +refs/heads/*:refs/remotes/origin/*\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("如果没有指定"),t("code",[e._v("refspec")]),e._v(", "),t("code",[e._v("git fetch")]),e._v("会尝试应用这个配置, 除了将"),t("code",[e._v("SHA-1")]),e._v("记录到"),t("code",[e._v("FETCH_HEAD")]),e._v("外还将所有的远端分支都同步到本地远端的镜像上")]),e._v(" "),t("p",[e._v("如果缺少这条配置")]),e._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[e._v("[remote "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"origin"')]),e._v("]\n  url = url\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  fetch = +refs/heads/*:refs/remotes/origin/*")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("GIT会将远端的"),t("code",[e._v("default branch")]),e._v("(一般是master)下载下来, 然后将"),t("code",[e._v("SHA-1")]),e._v("记录到"),t("code",[e._v("FETCH_HEAD")]),e._v("上")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("注意")]),e._v(" "),t("p",[t("code",[e._v("git fetch origin dev")])]),e._v(" "),t("p",[e._v("像前面提到的一样, 这里的"),t("code",[e._v("dev")]),e._v("不是"),t("code",[e._v("refspec")])]),e._v(" "),t("p",[e._v("如果配置有"),t("code",[e._v("fetch = + refs/heads/*:refs/remotes/origin/*")]),e._v(", 除了同步到"),t("code",[e._v("FETCH_HEAD")]),e._v("外, 还会同步到远程的镜像分支上")])]),e._v(" "),t("h3",{attrs:{id:"refs-remotes-remote-name"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#refs-remotes-remote-name"}},[e._v("#")]),e._v(" refs/remotes/remote_name/*")]),e._v(" "),t("p",[e._v("远程的镜像分支文件")]),e._v(" "),t("p",[e._v("我们是根据这个文件目录, 和分支间的上下游关系才能知道当前分支是"),t("code",[e._v("ahead/behind")]),e._v("远程分支")]),e._v(" "),t("p",[e._v("执行"),t("code",[e._v("git fetch")]),e._v("会根据"),t("code",[e._v("fetch = +refs/heads/*:refs/remotes/origin/*")]),e._v("将镜像更新")]),e._v(" "),t("h3",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),t("p",[t("code",[e._v("git fetch [<repo> [<refspec>]] [options]")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("指定"),t("code",[e._v("refspec")]),e._v("则根据"),t("code",[e._v("refspec")]),e._v("下载和记录SHA-1")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("git fetch origin dev")]),e._v("中的"),t("code",[e._v("dev")]),e._v("不属于"),t("code",[e._v("refspec")])])]),e._v(" "),t("li",[t("p",[e._v("在没有指定"),t("code",[e._v("refspec")]),e._v("的情况下应用"),t("code",[e._v("config.remote.fetch")]),e._v("(一般是默认的refspec, +refs/heads/"),t("em",[e._v(":refs/remotes/origin/")]),e._v(")")])]),e._v(" "),t("li",[t("p",[e._v("没有"),t("code",[e._v("refspec")]),e._v("和"),t("code",[e._v("config.remote.fetch")]),e._v("的话只将SHA-1记录到"),t("code",[e._v("FETCH_HEAD")])])])]),e._v(" "),t("h2",{attrs:{id:"一些比较常用的options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一些比较常用的options"}},[e._v("#")]),e._v(" 一些比较常用的OPTIONS")]),e._v(" "),t("h3",{attrs:{id:"all"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#all"}},[e._v("#")]),e._v(" --all")]),e._v(" "),t("p",[e._v("有时候我们有多个远程库, "),t("code",[e._v("--all")]),e._v("可以一起下载.")]),e._v(" "),t("p",[e._v("相当于")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git fetch origin\ngit fetch originDev\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("h3",{attrs:{id:"append"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#append"}},[e._v("#")]),e._v(" --append")]),e._v(" "),t("p",[e._v("前面提到"),t("code",[e._v("FETCH_HEAD")]),e._v("随着每次"),t("code",[e._v("fetch")]),e._v("都被overwrite, 通过"),t("code",[e._v("--append")]),e._v("改变其写入方式")]),e._v(" "),t("h3",{attrs:{id:"depth-depth"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#depth-depth"}},[e._v("#")]),e._v(" --depth=depth")]),e._v(" "),t("p",[e._v("最上面我们提到过可以单独下载SHA-1(6)的内容, 而忽略"),t("code",[e._v("parent's commit-SHA-1")]),e._v(", 这样就减少了下载的内容")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git fetch origin master --depth=1\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("只下载最近一次的提交")]),e._v(" "),t("h3",{attrs:{id:"unshalldow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unshalldow"}},[e._v("#")]),e._v(" --unshalldow")]),e._v(" "),t("p",[e._v("通过"),t("code",[e._v("--depth=depth")]),e._v("我们得到了一个不完整的GIT历史, 在"),t("code",[e._v("merge")]),e._v(", "),t("code",[e._v("rebase")]),e._v("...下会失败")]),e._v(" "),t("p",[t("code",[e._v("--unshalldow")]),e._v("是一个fix的方法, 可以重新让GIT变得完整")])])}),[],!1,null,null,null);s.default=_.exports}}]);